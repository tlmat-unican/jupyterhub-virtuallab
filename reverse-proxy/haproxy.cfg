global
    # Maximum simultaneous connections (default is 2000)
    maxconn 5000

############################################################
### HTTP MODE FOR REVERSE PROXY
############################################################

# In HTTP mode, you can use the ssl_fc_sni indicator or the host header 
# information (hdr(host)) to filter the incoming session and route it to the 
# proper backend server.

defaults http
    log global
    mode        http
    option      httplog
    option      dontlognull

    # Include X-Forwarded-For HTTP header with source IP address
    # Can be included on each backend, so keep this commented
    option forwardfor
    # Just for the case we have more than one option to serve a request
    option redispatch

    # Maximum simultaneous connections (default is 2000)
    #maxconn 5000

    timeout connect 5s
    timeout client  1h
    timeout server  1h
    timeout queue 30s
    timeout http-request 5s
    timeout http-keep-alive 15s
    retries 3

############################################################
### HTTP PROXY TO INTERNAL SSL/NON-SSL SERVERS
############################################################

frontend http-http-in
    #Although it is inherited from defaults
    mode http
    bind *:80

    # Include X-Forwarded-For HTTP header with source IP address
    # Can be included on each backend, so keep this commented
    option forwardfor except 127.0.0.1
    # Include X-Forwarded-Proto HTTP header with source HTTP mode
    http-request set-header X-Forwarded-Proto http
    # Enable HTTP server connection close
    option http-server-close

    # Disable default backend in order to keep thinks under control
    #default_backend redirect-to-https_http-http

    # Let's Encrypt certificate management
    # acl is_letsencrypt path_beg /.well-known/acme-challenge
    # use_backend letsencrypt-manager_http-http if is_letsencrypt

    ### Add new acl and use_backend entry for each new site
    ### New backend sections will be needed as well
    ### Please describe service in backend definition
    acl is_jupyter hdr(host) -i ${HOST_NAME}
    acl is_jupyter hdr(host) -i ${HOST_NAME}
    use_backend redirect-to-https_http-http if is_jupyter
  
frontend https-http-in
    #Although it is inherited from defaults
    mode http
    bind *:443 ssl crt /etc/ssl/letsencrypt/server.crt-key.pem 
    #alpn h2,http/1.1

    http-request set-header X-Forwarded-Proto http
    http-request set-header X-Forwarded-Port %[dst_port]
    # Enable HTTP server connection close
    option http-server-close

    # Disable default backends in order to keep things under control
    #default_backend redirect-to-http_http-http

    ### Add new acl and use_backend entry for each new site
    ### New backend sections will be needed as well
    ### Please describe service in backend definition
    acl is_jupyter ssl_fc_sni -i ${HOST_NAME}
    acl is_jupyter ssl_fc_sni -i ${HOST_NAME}
    use_backend jupyterhub_http-http if is_jupyter

backend redirect-to-https_http-http
    mode http
    redirect scheme https code 301 if !{ ssl_fc }

# SRC Jupyterhub
backend jupyterhub_http-http
    mode http
    server srv01 jupyterhub-tlmat:8000

# Let's Encrypt certificate management
# backend letsencrypt-manager_http-http
#     mode http
#     server srv01 letsencrypt-manager:80
